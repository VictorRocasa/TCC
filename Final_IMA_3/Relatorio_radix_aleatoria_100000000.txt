Entrada aleatoria de tamanho 100000000

Digitos do maior numero = 1
Radixsort(d = 1): 2.006532, usando 3235.004416MB
Radixsort(d = 2): 1.958807, usando 3233.603584MB
Radixsort(d = 3): 1.948907, usando 3234.369536MB
Radixsort(d = 4): 1.946580, usando 3238.240256MB
Radixsort(d = 5): 1.961456, usando 3236.515840MB
Radixsort(d = 6): 1.976900, usando 3251.499008MB
Radixsort(d = 7): 2.055977, usando 3395.981312MB

Digitos do maior numero = 2
Radixsort(d = 1): 6.332125, usando 3239.374848MB
Radixsort(d = 2): 9.942669, usando 3239.493632MB
Radixsort(d = 3): 9.895316, usando 3240.591360MB
Radixsort(d = 4): 9.932245, usando 3242.287104MB
Radixsort(d = 5): 9.950283, usando 3243.622400MB
Radixsort(d = 6): 9.911534, usando 3258.576896MB
Radixsort(d = 7): 9.988549, usando 3403.857920MB

Digitos do maior numero = 3
Radixsort(d = 1): 14.349879, usando 3244.687360MB
Radixsort(d = 2): 9.926999, usando 3243.933696MB
Radixsort(d = 3): 11.945413, usando 3244.138496MB
Radixsort(d = 4): 12.016015, usando 3245.527040MB
Radixsort(d = 5): 12.008454, usando 3246.632960MB
Radixsort(d = 6): 12.459455, usando 3260.272640MB
Radixsort(d = 7): 12.274757, usando 3404.562432MB

Digitos do maior numero = 4
Radixsort(d = 1): 24.878421, usando 3247.460352MB
Radixsort(d = 2): 22.427408, usando 3247.124480MB
Radixsort(d = 3): 12.319065, usando 3247.132672MB
Radixsort(d = 4): 15.113358, usando 3248.242688MB
Radixsort(d = 5): 14.344047, usando 3249.217536MB
Radixsort(d = 6): 14.315343, usando 3263.619072MB
Radixsort(d = 7): 14.503331, usando 3407.720448MB

Digitos do maior numero = 5
Radixsort(d = 1): 36.343788, usando 3249.106944MB
Radixsort(d = 2): 22.076152, usando 3248.562176MB
Radixsort(d = 3): 25.593887, usando 3248.570368MB
Radixsort(d = 4): 14.296972, usando 3249.111040MB
Radixsort(d = 5): 16.035015, usando 3251.150848MB
Radixsort(d = 6): 16.298731, usando 3264.970752MB
Radixsort(d = 7): 16.530903, usando 3409.158144MB

Digitos do maior numero = 6
Radixsort(d = 1): 49.513955, usando 3250.601984MB
Radixsort(d = 2): 35.886044, usando 3249.922048MB
Radixsort(d = 3): 26.621740, usando 3250.184192MB
Radixsort(d = 4): 27.878984, usando 3250.679808MB
Radixsort(d = 5): 16.067053, usando 3253.174272MB
Radixsort(d = 6): 23.081168, usando 3266.629632MB
Radixsort(d = 7): 22.767380, usando 3410.821120MB

Digitos do maior numero = 7
Radixsort(d = 1): 64.228962, usando 3251.318784MB
Radixsort(d = 2): 36.351957, usando 3252.285440MB
Radixsort(d = 3): 27.117055, usando 3251.724288MB
Radixsort(d = 4): 29.898488, usando 3252.031488MB
Radixsort(d = 5): 29.814695, usando 3254.501376MB
Radixsort(d = 6): 23.457799, usando 3268.153344MB
Radixsort(d = 7): 27.599183, usando 3412.217856MB

Digitos do maior numero = 8
Radixsort(d = 1): 76.418924, usando 3252.953088MB
Radixsort(d = 2): 49.544580, usando 3253.903360MB
Radixsort(d = 3): 40.941100, usando 3253.407744MB
Radixsort(d = 4): 33.267606, usando 3253.661696MB
Radixsort(d = 5): 33.147453, usando 3255.762944MB
Radixsort(d = 6): 37.022472, usando 3269.828608MB
Radixsort(d = 7): 28.621213, usando 3413.823488MB

Digitos do maior numero = 9
Radixsort(d = 1): 91.778627, usando 3254.403072MB
Radixsort(d = 2): 51.254086, usando 3254.919168MB
Radixsort(d = 3): 42.694291, usando 3254.341632MB
Radixsort(d = 4): 32.261125, usando 3254.603776MB
Radixsort(d = 5): 34.392235, usando 3256.496128MB
Radixsort(d = 6): 38.942255, usando 3270.623232MB
Radixsort(d = 7): 41.504755, usando 3414.802432MB

Digitos do maior numero = 10
Radixsort(d = 1): 106.300350, usando 3255.398400MB
Radixsort(d = 2): 64.085079, usando 3256.004608MB
Radixsort(d = 3): 43.376455, usando 3255.451648MB
Radixsort(d = 4): 46.345392, usando 3255.631872MB
Radixsort(d = 5): 36.198918, usando 3258.023936MB
Radixsort(d = 6): 40.091396, usando 3271.659520MB
Radixsort(d = 7): 41.847289, usando 3415.707648MB

Digitos do maior numero = 11
Radixsort(d = 1): -1.#IND00, usando -1.#IND00MB
Radixsort(d = 2): -1.#IND00, usando -1.#IND00MB
Radixsort(d = 3): -1.#IND00, usando -1.#IND00MB
Radixsort(d = 4): -1.#IND00, usando -1.#IND00MB
Radixsort(d = 5): -1.#IND00, usando -1.#IND00MB
Radixsort(d = 6): -1.#IND00, usando -1.#IND00MB
Radixsort(d = 7): -1.#IND00, usando -1.#IND00MB

Digitos do maior numero = 12
Radixsort(d = 1): -1.#IND00, usando -1.#IND00MB
Radixsort(d = 2): -1.#IND00, usando -1.#IND00MB
Radixsort(d = 3): -1.#IND00, usando -1.#IND00MB
Radixsort(d = 4): -1.#IND00, usando -1.#IND00MB
Radixsort(d = 5): -1.#IND00, usando -1.#IND00MB
Radixsort(d = 6): -1.#IND00, usando -1.#IND00MB
Radixsort(d = 7): -1.#IND00, usando -1.#IND00MB

Digitos do maior numero = 13
Radixsort(d = 1): -1.#IND00, usando -1.#IND00MB
Radixsort(d = 2): -1.#IND00, usando -1.#IND00MB
Radixsort(d = 3): -1.#IND00, usando -1.#IND00MB
Radixsort(d = 4): -1.#IND00, usando -1.#IND00MB
Radixsort(d = 5): -1.#IND00, usando -1.#IND00MB
Radixsort(d = 6): -1.#IND00, usando -1.#IND00MB
Radixsort(d = 7): -1.#IND00, usando -1.#IND00MB

Digitos do maior numero = 14
Radixsort(d = 1): -1.#IND00, usando -1.#IND00MB
Radixsort(d = 2): -1.#IND00, usando -1.#IND00MB
Radixsort(d = 3): -1.#IND00, usando -1.#IND00MB
Radixsort(d = 4): -1.#IND00, usando -1.#IND00MB
Radixsort(d = 5): -1.#IND00, usando -1.#IND00MB
Radixsort(d = 6): -1.#IND00, usando -1.#IND00MB
Radixsort(d = 7): -1.#IND00, usando -1.#IND00MB

Digitos do maior numero = 15
Radixsort(d = 1): -1.#IND00, usando -1.#IND00MB
Radixsort(d = 2): -1.#IND00, usando -1.#IND00MB
Radixsort(d = 3): -1.#IND00, usando -1.#IND00MB
Radixsort(d = 4): -1.#IND00, usando -1.#IND00MB
Radixsort(d = 5): -1.#IND00, usando -1.#IND00MB
Radixsort(d = 6): -1.#IND00, usando -1.#IND00MB
Radixsort(d = 7): -1.#IND00, usando -1.#IND00MB

Digitos do maior numero = 16
Radixsort(d = 1): -1.#IND00, usando -1.#IND00MB
Radixsort(d = 2): -1.#IND00, usando -1.#IND00MB
Radixsort(d = 3): -1.#IND00, usando -1.#IND00MB
Radixsort(d = 4): -1.#IND00, usando -1.#IND00MB
Radixsort(d = 5): -1.#IND00, usando -1.#IND00MB
Radixsort(d = 6): -1.#IND00, usando -1.#IND00MB
Radixsort(d = 7): -1.#IND00, usando -1.#IND00MB

Digitos do maior numero = 17
Radixsort(d = 1): -1.#IND00, usando -1.#IND00MB
Radixsort(d = 2): -1.#IND00, usando -1.#IND00MB
Radixsort(d = 3): -1.#IND00, usando -1.#IND00MB
Radixsort(d = 4): -1.#IND00, usando -1.#IND00MB
Radixsort(d = 5): -1.#IND00, usando -1.#IND00MB
Radixsort(d = 6): -1.#IND00, usando -1.#IND00MB
Radixsort(d = 7): -1.#IND00, usando -1.#IND00MB

Digitos do maior numero = 18
Radixsort(d = 1): -1.#IND00, usando -1.#IND00MB
Radixsort(d = 2): -1.#IND00, usando -1.#IND00MB
Radixsort(d = 3): -1.#IND00, usando -1.#IND00MB
Radixsort(d = 4): -1.#IND00, usando -1.#IND00MB
Radixsort(d = 5): -1.#IND00, usando -1.#IND00MB
Radixsort(d = 6): -1.#IND00, usando -1.#IND00MB
Radixsort(d = 7): -1.#IND00, usando -1.#IND00MB

Digitos do maior numero = 19
Radixsort(d = 1): -1.#IND00, usando -1.#IND00MB
Radixsort(d = 2): -1.#IND00, usando -1.#IND00MB
Radixsort(d = 3): -1.#IND00, usando -1.#IND00MB
Radixsort(d = 4): -1.#IND00, usando -1.#IND00MB
Radixsort(d = 5): -1.#IND00, usando -1.#IND00MB
Radixsort(d = 6): -1.#IND00, usando -1.#IND00MB
Radixsort(d = 7): -1.#IND00, usando -1.#IND00MB

Digitos do maior numero = 20
Radixsort(d = 1): -1.#IND00, usando -1.#IND00MB
Radixsort(d = 2): -1.#IND00, usando -1.#IND00MB
Radixsort(d = 3): -1.#IND00, usando -1.#IND00MB
Radixsort(d = 4): -1.#IND00, usando -1.#IND00MB
Radixsort(d = 5): -1.#IND00, usando -1.#IND00MB
Radixsort(d = 6): -1.#IND00, usando -1.#IND00MB
Radixsort(d = 7): -1.#IND00, usando -1.#IND00MB

